// automatically generated by the FlatBuffers compiler, do not modify

package com.tracker.shared.flatbuf;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SportActivityFlat extends Table {
  public static SportActivityFlat getRootAsSportActivityFlat(ByteBuffer _bb) { return getRootAsSportActivityFlat(_bb, new SportActivityFlat()); }
  public static SportActivityFlat getRootAsSportActivityFlat(ByteBuffer _bb, SportActivityFlat obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public SportActivityFlat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public String activity() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer activityAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public int type() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int calories() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int totalElevation() { int o = __offset(12); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int totalDenivelation() { int o = __offset(14); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public long startTimestamp() { int o = __offset(16); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long endTimestamp() { int o = __offset(18); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public PointFlat points(int j) { return points(new PointFlat(), j); }
  public PointFlat points(PointFlat obj, int j) { int o = __offset(20); return o != 0 ? obj.__assign(__vector(o) + j * 24, bb) : null; }
  public int pointsLength() { int o = __offset(20); return o != 0 ? __vector_len(o) : 0; }
  public DataFlat dataList(int j) { return dataList(new DataFlat(), j); }
  public DataFlat dataList(DataFlat obj, int j) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int dataListLength() { int o = __offset(22); return o != 0 ? __vector_len(o) : 0; }
  public SplitFlat splits(int j) { return splits(new SplitFlat(), j); }
  public SplitFlat splits(SplitFlat obj, int j) { int o = __offset(24); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int splitsLength() { int o = __offset(24); return o != 0 ? __vector_len(o) : 0; }
  public long lastModified() { int o = __offset(26); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createSportActivityFlat(FlatBufferBuilder builder,
      int idOffset,
      int activityOffset,
      int type,
      int calories,
      int totalElevation,
      int totalDenivelation,
      long startTimestamp,
      long endTimestamp,
      int pointsOffset,
      int dataListOffset,
      int splitsOffset,
      long lastModified) {
    builder.startObject(12);
    SportActivityFlat.addLastModified(builder, lastModified);
    SportActivityFlat.addEndTimestamp(builder, endTimestamp);
    SportActivityFlat.addStartTimestamp(builder, startTimestamp);
    SportActivityFlat.addSplits(builder, splitsOffset);
    SportActivityFlat.addDataList(builder, dataListOffset);
    SportActivityFlat.addPoints(builder, pointsOffset);
    SportActivityFlat.addTotalDenivelation(builder, totalDenivelation);
    SportActivityFlat.addTotalElevation(builder, totalElevation);
    SportActivityFlat.addCalories(builder, calories);
    SportActivityFlat.addType(builder, type);
    SportActivityFlat.addActivity(builder, activityOffset);
    SportActivityFlat.addId(builder, idOffset);
    return SportActivityFlat.endSportActivityFlat(builder);
  }

  public static void startSportActivityFlat(FlatBufferBuilder builder) { builder.startObject(12); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addActivity(FlatBufferBuilder builder, int activityOffset) { builder.addOffset(1, activityOffset, 0); }
  public static void addType(FlatBufferBuilder builder, int type) { builder.addInt(2, type, 0); }
  public static void addCalories(FlatBufferBuilder builder, int calories) { builder.addInt(3, calories, 0); }
  public static void addTotalElevation(FlatBufferBuilder builder, int totalElevation) { builder.addInt(4, totalElevation, 0); }
  public static void addTotalDenivelation(FlatBufferBuilder builder, int totalDenivelation) { builder.addInt(5, totalDenivelation, 0); }
  public static void addStartTimestamp(FlatBufferBuilder builder, long startTimestamp) { builder.addLong(6, startTimestamp, 0L); }
  public static void addEndTimestamp(FlatBufferBuilder builder, long endTimestamp) { builder.addLong(7, endTimestamp, 0L); }
  public static void addPoints(FlatBufferBuilder builder, int pointsOffset) { builder.addOffset(8, pointsOffset, 0); }
  public static void startPointsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(24, numElems, 8); }
  public static void addDataList(FlatBufferBuilder builder, int dataListOffset) { builder.addOffset(9, dataListOffset, 0); }
  public static int createDataListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDataListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addSplits(FlatBufferBuilder builder, int splitsOffset) { builder.addOffset(10, splitsOffset, 0); }
  public static int createSplitsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSplitsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addLastModified(FlatBufferBuilder builder, long lastModified) { builder.addLong(11, lastModified, 0L); }
  public static int endSportActivityFlat(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

